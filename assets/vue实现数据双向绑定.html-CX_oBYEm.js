import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,o,a as e}from"./app-Choq_EAv.js";const n={},a=e("h1",{id:"vue实现数据双向绑定",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue实现数据双向绑定"},[e("span",null,"Vue实现数据双向绑定")])],-1),i=e("p",null,"Vue是采用数据劫持结合发布者-订阅者模式的方式，通过使用ES5中的Object.defineProperty() (狄凡的 怕破儿立)方法来劫持各个属性的setter (涩特儿)，getter (给特儿)，在数据变动时发布消息给订阅者，触发相应的监听回调来渲染视图。",-1),c=e("h2",{id:"实现数据双向绑定的步骤",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#实现数据双向绑定的步骤"},[e("span",null,"实现数据双向绑定的步骤")])],-1),p=e("p",null,"1、创建Vue实例时，在data属性中定义需要双向绑定的数据。",-1),s=e("p",null,"2、在模板中使用v-model指令将输入控件绑定到数据属性上。 在Vue内部，使用Object.defineProperty()方法将数据属性转换为getter/setter形式，从而实现数据的响应式变化。",-1),l=e("p",null,"3、当输入控件的值发生变化时，Vue会自动调用数据属性的setter方法，从而更新数据的值。",-1),u=e("p",null,"4、当数据的值发生变化时，Vue会自动更新相关的DOM元素，从而实现数据与视图的双向绑定。",-1),d=[a,i,c,p,s,l,u];function m(h,_){return o(),r("div",null,d)}const f=t(n,[["render",m],["__file","vue实现数据双向绑定.html.vue"]]),y=JSON.parse('{"path":"/%E7%9F%A5%E8%AF%86%E5%BA%93/vue2/vue%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A.html","title":"Vue实现数据双向绑定","lang":"zh-CN","frontmatter":{"description":"Vue实现数据双向绑定 Vue是采用数据劫持结合发布者-订阅者模式的方式，通过使用ES5中的Object.defineProperty() (狄凡的 怕破儿立)方法来劫持各个属性的setter (涩特儿)，getter (给特儿)，在数据变动时发布消息给订阅者，触发相应的监听回调来渲染视图。 实现数据双向绑定的步骤 1、创建Vue实例时，在data属性...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%9F%A5%E8%AF%86%E5%BA%93/vue2/vue%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A.html"}],["meta",{"property":"og:site_name","content":"向前有光的博客"}],["meta",{"property":"og:title","content":"Vue实现数据双向绑定"}],["meta",{"property":"og:description","content":"Vue实现数据双向绑定 Vue是采用数据劫持结合发布者-订阅者模式的方式，通过使用ES5中的Object.defineProperty() (狄凡的 怕破儿立)方法来劫持各个属性的setter (涩特儿)，getter (给特儿)，在数据变动时发布消息给订阅者，触发相应的监听回调来渲染视图。 实现数据双向绑定的步骤 1、创建Vue实例时，在data属性..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-30T02:21:23.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:modified_time","content":"2024-10-30T02:21:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue实现数据双向绑定\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-30T02:21:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"实现数据双向绑定的步骤","slug":"实现数据双向绑定的步骤","link":"#实现数据双向绑定的步骤","children":[]}],"git":{"createdTime":1720591787000,"updatedTime":1730254883000,"contributors":[{"name":"test","email":"email","commits":2}]},"readingTime":{"minutes":0.84,"words":253},"filePathRelative":"知识库/vue2/vue实现数据双向绑定.md","localizedDate":"2024年7月10日","excerpt":"\\n<p>Vue是采用数据劫持结合发布者-订阅者模式的方式，通过使用ES5中的Object.defineProperty() (狄凡的 怕破儿立)方法来劫持各个属性的setter (涩特儿)，getter (给特儿)，在数据变动时发布消息给订阅者，触发相应的监听回调来渲染视图。</p>\\n<h2>实现数据双向绑定的步骤</h2>\\n<p>1、创建Vue实例时，在data属性中定义需要双向绑定的数据。</p>\\n<p>2、在模板中使用v-model指令将输入控件绑定到数据属性上。 在Vue内部，使用Object.defineProperty()方法将数据属性转换为getter/setter形式，从而实现数据的响应式变化。</p>","autoDesc":true}');export{f as comp,y as data};
