import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,d as e}from"./app-DeYunnnJ.js";const n={},t=e(`<h1 id="vue-router是什么" tabindex="-1"><a class="header-anchor" href="#vue-router是什么"><span>vue-Router是什么</span></a></h1><p>Vue Router 是 Vue.js 官方的路由管理库，用于构建单页应用程序。</p><p><strong>路由模式</strong></p><ul><li>Hash 模式：URL 中使用 #（默认模式），兼容性好。</li><li>History 模式(黑丝觉)：基于 HTML5 History API，URL 更美观，需服务器支持。</li></ul><h2 id="vue-router中params-陪润儿丝-和query的传值区别" tabindex="-1"><a class="header-anchor" href="#vue-router中params-陪润儿丝-和query的传值区别"><span>vue-router中params(陪润儿丝)和query的传值区别</span></a></h2><p>query和params两者都是在Vue路由中传参 用法： query用path来引入，params只能用name来传递，不能使用path</p><h3 id="query方式传参和接收参数" tabindex="-1"><a class="header-anchor" href="#query方式传参和接收参数"><span>query方式传参和接收参数</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//传参</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">$router</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;/xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">        query</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">          id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> })</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> //接收参数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">$route</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">id</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>传参是this.$router,接收是this.$route</code></strong></p><h3 id="params-陪润儿丝-方式传参和接收参数" tabindex="-1"><a class="header-anchor" href="#params-陪润儿丝-方式传参和接收参数"><span>params(陪润儿丝)方式传参和接收参数</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//传参: </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">$router</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">        name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">        params</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">          id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//接收参数:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">$route</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">id</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>params传参里面只能是name，不能是path.</strong><strong>params只能用name来引入路由，如果这里写成了path，接收参数页面会是undefined</strong></p><h3 id="params-陪润儿丝" tabindex="-1"><a class="header-anchor" href="#params-陪润儿丝"><span>Params(陪润儿丝)</span></a></h3><p>Params 是路由参数，通常用于在URL中表示层级关系或动态部分。例如，在定义路由时使用<code>:id</code>来捕获动态段</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> routes</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;/user/:id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    component</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">User</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">];</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="query" tabindex="-1"><a class="header-anchor" href="#query"><span>Query</span></a></h3><p>Query 是查询参数，通常用于传递非必要的信息或者在URL中显示某些信息。例如，在URL后面添加<code>?key=value</code>的形式。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// URL 示例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">user</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">123</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">admin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拦截" tabindex="-1"><a class="header-anchor" href="#拦截"><span>拦截</span></a></h2><p>beforeEach(to,from, next) 在路由跳转前触发，参数包括to,from,next(莱克斯特) 三个，这个钩子作用主要是用于登录验证 前置守卫也可以理解为一个路由拦截器，也就是说所有的路由在跳转前都要先被前置守卫拦截</p>`,20),l=[t];function h(r,p){return a(),i("div",null,l)}const u=s(n,[["render",h],["__file","4、vue-Router是什么.html.vue"]]),o=JSON.parse('{"path":"/%E7%9F%A5%E8%AF%86%E5%BA%93/vue2/4%E3%80%81vue-Router%E6%98%AF%E4%BB%80%E4%B9%88.html","title":"vue-Router是什么","lang":"zh-CN","frontmatter":{"title":"vue-Router是什么","order":4,"description":"vue-Router是什么 Vue Router 是 Vue.js 官方的路由管理库，用于构建单页应用程序。 路由模式 Hash 模式：URL 中使用 #（默认模式），兼容性好。 History 模式(黑丝觉)：基于 HTML5 History API，URL 更美观，需服务器支持。 vue-router中params(陪润儿丝)和query的传值区别...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%9F%A5%E8%AF%86%E5%BA%93/vue2/4%E3%80%81vue-Router%E6%98%AF%E4%BB%80%E4%B9%88.html"}],["meta",{"property":"og:site_name","content":"向前有光的博客"}],["meta",{"property":"og:title","content":"vue-Router是什么"}],["meta",{"property":"og:description","content":"vue-Router是什么 Vue Router 是 Vue.js 官方的路由管理库，用于构建单页应用程序。 路由模式 Hash 模式：URL 中使用 #（默认模式），兼容性好。 History 模式(黑丝觉)：基于 HTML5 History API，URL 更美观，需服务器支持。 vue-router中params(陪润儿丝)和query的传值区别..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-03T07:46:09.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:modified_time","content":"2025-03-03T07:46:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue-Router是什么\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-03T07:46:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"vue-router中params(陪润儿丝)和query的传值区别","slug":"vue-router中params-陪润儿丝-和query的传值区别","link":"#vue-router中params-陪润儿丝-和query的传值区别","children":[{"level":3,"title":"query方式传参和接收参数","slug":"query方式传参和接收参数","link":"#query方式传参和接收参数","children":[]},{"level":3,"title":"params(陪润儿丝)方式传参和接收参数","slug":"params-陪润儿丝-方式传参和接收参数","link":"#params-陪润儿丝-方式传参和接收参数","children":[]},{"level":3,"title":"Params(陪润儿丝)","slug":"params-陪润儿丝","link":"#params-陪润儿丝","children":[]},{"level":3,"title":"Query","slug":"query","link":"#query","children":[]}]},{"level":2,"title":"拦截","slug":"拦截","link":"#拦截","children":[]}],"git":{"createdTime":1720591787000,"updatedTime":1740987969000,"contributors":[{"name":"jitems","email":"3119125794@qq.com","commits":1}]},"readingTime":{"minutes":1.41,"words":424},"filePathRelative":"知识库/vue2/4、vue-Router是什么.md","localizedDate":"2024年7月10日","excerpt":"\\n<p>Vue Router 是 Vue.js 官方的路由管理库，用于构建单页应用程序。</p>\\n<p><strong>路由模式</strong></p>\\n<ul>\\n<li>Hash 模式：URL 中使用 #（默认模式），兼容性好。</li>\\n<li>History 模式(黑丝觉)：基于 HTML5 History API，URL 更美观，需服务器支持。</li>\\n</ul>\\n<h2>vue-router中params(陪润儿丝)和query的传值区别</h2>\\n<p>query和params两者都是在Vue路由中传参\\n用法： query用path来引入，params只能用name来传递，不能使用path</p>","autoDesc":true}');export{u as comp,o as data};
