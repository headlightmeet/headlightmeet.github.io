import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,d as a}from"./app-CBrd23JN.js";const t={},n=a(`<p> </p><h1 id="常规" tabindex="-1"><a class="header-anchor" href="#常规"><span>常规</span></a></h1><h2 id="解决花括号问题" tabindex="-1"><a class="header-anchor" href="#解决花括号问题"><span>解决花括号问题</span></a></h2><p>标签样式中加 v-cloak v-克楼克</p><p>在css中加</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#C678DD;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;">v-cloak</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">none</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue是什么" tabindex="-1"><a class="header-anchor" href="#vue是什么"><span>vue是什么</span></a></h2><p>Vue是一款基于MVVM架构的渐进式框架，它主要用于构建单页面应用（spa），它的特点有声明式渲染、响应式两大点</p><h2 id="什么是响应式" tabindex="-1"><a class="header-anchor" href="#什么是响应式"><span>什么是响应式</span></a></h2><p>响应式就是在我们修改数据之后，无需手动触发视图更新，视图会自动更新。</p><h2 id="vue中data为什么是一个函数" tabindex="-1"><a class="header-anchor" href="#vue中data为什么是一个函数"><span>vue中data为什么是一个函数</span></a></h2><p>vue的data是一个函数的原因是，确保每一个vue组件的实例是唯一的，数据是不共享的，更容易维护的</p><h2 id="vue的优点-vue的缺点" tabindex="-1"><a class="header-anchor" href="#vue的优点-vue的缺点"><span>Vue的优点? vue的缺点?</span></a></h2><p>优点: 渐进式，组件化，轻量级，虚拟dom，响应式，单页面路由，数据与视图分开 缺点: 单页面不利于seo，不支持IE8以下，首屏加载时间长</p><h2 id="v-if和v-show有何区别" tabindex="-1"><a class="header-anchor" href="#v-if和v-show有何区别"><span>v-if和v-show有何区别？</span></a></h2><p>核心：v-if 会导致 组件（dom）的重新渲染，但是 v-show 不会。</p><ul><li>v-if元素不可见，直接删除DOM，有更高的切换消耗。当 v-if 为 false 时，整个组件是不存在的，而变为 true 之后，组件会重新执行所有的生命周期回调。</li><li>v-show在整个生命周期只会触发一次。v-show通过设置元素display(迪斯普类): none(南嗯)控制显示隐藏，更高的初始渲染消耗。 当 v-show 为 false 时，组件虽然看不到，但是 已经存在了</li></ul><p>所以说，判断 v-if 和 v-show 的使用条件应该是：当组件需要在指定时机创建，在指定时机销毁时，需要使用 v-if。而 当组件仅需要创建一次时，则可以使用 v-show。</p><h2 id="为什么v-if和v-for不建议用在同一标签" tabindex="-1"><a class="header-anchor" href="#为什么v-if和v-for不建议用在同一标签"><span>为什么v-if和v-for不建议用在同一标签？</span></a></h2><ul><li>在Vue2中，v-for的优先级要高于v-if，但是在Vue3中，v-for的优先级要低于v-if。</li><li>在Vue2中，会先通过v-for遍历，然后对每一项使用v-if判断，不满足条件的不会渲染，但是这种方式并不好，相当于对很多个标签都添加了v-if，每次渲染之前都要判断。于是在Vue3中，v-if的优先级要高于v-for了，相当于在v-for外层包裹了一层，但是这时的判断条件肯定是错的，因此在vue3中同一标签使用v-for和v-if时，会报错。</li></ul><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> v</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">for</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;tod in tods&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> v</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;tod.name!=&#39;&#39;&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  {{tod.name}}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">li</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在外面包裹一层<code>&lt;template&gt;</code> 再在其上使用v-for 可以解决这个问题</p><h2 id="computed-康pu-特-和watch-挖企-的区别" tabindex="-1"><a class="header-anchor" href="#computed-康pu-特-和watch-挖企-的区别"><span>computed(康pu 特) 和watch(挖企)的区别</span></a></h2><ul><li>1、computed 默认执行一次，watch默认不会执行</li><li>2、computed 支持缓存，只有依赖数据发生改变，才会重新进行计算；watch 不支持缓存，数据变，直接会触发相应的操作</li><li>3、computed 不支持异步，当computed内有异步操作时无效，无法监听数据的变化；watch 支持异步</li></ul><h2 id="为什么不建议用index做key-为什么不建议用随机数做key" tabindex="-1"><a class="header-anchor" href="#为什么不建议用index做key-为什么不建议用随机数做key"><span>为什么不建议用index做key，为什么不建议用随机数做key？</span></a></h2><p>用index和用随机数都是同理，随机数每次都在变，做不到专一性，也很消耗性能</p>`,26),l=[n];function h(p,d){return e(),s("div",null,l)}const o=i(t,[["render",h],["__file","1、常规.html.vue"]]),c=JSON.parse('{"path":"/%E7%9F%A5%E8%AF%86%E5%BA%93/vue2/1%E3%80%81%E5%B8%B8%E8%A7%84.html","title":"常规","lang":"zh-CN","frontmatter":{"title":"常规","order":1,"description":"常规 解决花括号问题 标签样式中加 v-cloak v-克楼克 在css中加 vue是什么 Vue是一款基于MVVM架构的渐进式框架，它主要用于构建单页面应用（spa），它的特点有声明式渲染、响应式两大点 什么是响应式 响应式就是在我们修改数据之后，无需手动触发视图更新，视图会自动更新。 vue中data为什么是一个函数 vue的data是一个函数的原...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%9F%A5%E8%AF%86%E5%BA%93/vue2/1%E3%80%81%E5%B8%B8%E8%A7%84.html"}],["meta",{"property":"og:site_name","content":"向前有光的博客"}],["meta",{"property":"og:title","content":"常规"}],["meta",{"property":"og:description","content":"常规 解决花括号问题 标签样式中加 v-cloak v-克楼克 在css中加 vue是什么 Vue是一款基于MVVM架构的渐进式框架，它主要用于构建单页面应用（spa），它的特点有声明式渲染、响应式两大点 什么是响应式 响应式就是在我们修改数据之后，无需手动触发视图更新，视图会自动更新。 vue中data为什么是一个函数 vue的data是一个函数的原..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-03T07:46:09.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:modified_time","content":"2025-03-03T07:46:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常规\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-03T07:46:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"解决花括号问题","slug":"解决花括号问题","link":"#解决花括号问题","children":[]},{"level":2,"title":"vue是什么","slug":"vue是什么","link":"#vue是什么","children":[]},{"level":2,"title":"什么是响应式","slug":"什么是响应式","link":"#什么是响应式","children":[]},{"level":2,"title":"vue中data为什么是一个函数","slug":"vue中data为什么是一个函数","link":"#vue中data为什么是一个函数","children":[]},{"level":2,"title":"Vue的优点? vue的缺点?","slug":"vue的优点-vue的缺点","link":"#vue的优点-vue的缺点","children":[]},{"level":2,"title":"v-if和v-show有何区别？","slug":"v-if和v-show有何区别","link":"#v-if和v-show有何区别","children":[]},{"level":2,"title":"为什么v-if和v-for不建议用在同一标签？","slug":"为什么v-if和v-for不建议用在同一标签","link":"#为什么v-if和v-for不建议用在同一标签","children":[]},{"level":2,"title":"computed(康pu 特) 和watch(挖企)的区别","slug":"computed-康pu-特-和watch-挖企-的区别","link":"#computed-康pu-特-和watch-挖企-的区别","children":[]},{"level":2,"title":"为什么不建议用index做key，为什么不建议用随机数做key？","slug":"为什么不建议用index做key-为什么不建议用随机数做key","link":"#为什么不建议用index做key-为什么不建议用随机数做key","children":[]}],"git":{"createdTime":1720591787000,"updatedTime":1740987969000,"contributors":[{"name":"jitems","email":"3119125794@qq.com","commits":1}]},"readingTime":{"minutes":2.72,"words":816},"filePathRelative":"知识库/vue2/1、常规.md","localizedDate":"2024年7月10日","excerpt":"<p>&nbsp;</p>\\n<h1>常规</h1>\\n<h2>解决花括号问题</h2>\\n<p>标签样式中加 v-cloak   v-克楼克</p>\\n<p>在css中加</p>\\n<div class=\\"language-css line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"css\\" data-title=\\"css\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#C678DD\\">[</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#D19A66\\">v-cloak</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#C678DD\\">]</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#005CC5;--shiki-dark:#ABB2BF\\">    display</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">none</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\"> !important</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{o as comp,c as data};
