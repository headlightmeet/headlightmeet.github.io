import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,d as c}from"./app-Dt-F0gMY.js";const i={},d=c('<h1 id="普通函数与箭头函数区别" tabindex="-1"><a class="header-anchor" href="#普通函数与箭头函数区别"><span>普通函数与箭头函数区别</span></a></h1><h2 id="箭头函数" tabindex="-1"><a class="header-anchor" href="#箭头函数"><span>箭头函数</span></a></h2><ul><li>箭头函数的语法更加简洁明了，使用箭头<code>（=&gt;）</code>来定义函数，并且省略了 <code>function</code> 关键字和大括号 <code>{}</code>，如果只有一个参数可以省略小括号 <code>()</code>。</li><li>箭头函数没有自己的 <code>this</code>，它会捕获其所在上下文的 <code>this</code> 值，因此在箭头函数内部无法通过 <code>this</code> 来访问外部作用域的 <code>this</code>。</li><li>箭头函数‌：不能用作构造函数，因为它们没有自己的<code>this</code>和<code>prototype</code>属性</li></ul><h2 id="普通函数" tabindex="-1"><a class="header-anchor" href="#普通函数"><span>普通函数</span></a></h2><ul><li>普通函数使用 <code>function</code> 关键字定义，需要在大括号 <code>{}</code> 中写入函数体，语法相对更加冗长。</li><li>普通函数有自己的 <code>this</code>，在函数被调用时动态绑定。在全局作用域中，<code>this</code> 指向全局对象（在浏览器中是 <code>window</code> 对象。</li><li>普通函数可以用作构造函数，可以使用 <code>new</code> 关键字来创建对象实例。</li></ul>',5),n=[d];function a(r,l){return o(),t("div",null,n)}const p=e(i,[["render",a],["__file","3、普通函数与箭头函数区别.html.vue"]]),m=JSON.parse('{"path":"/%E7%9F%A5%E8%AF%86%E5%BA%93/JS/3%E3%80%81%E6%99%AE%E9%80%9A%E5%87%BD%E6%95%B0%E4%B8%8E%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E5%8C%BA%E5%88%AB.html","title":"普通函数与箭头函数区别","lang":"zh-CN","frontmatter":{"title":"普通函数与箭头函数区别","order":3,"description":"普通函数与箭头函数区别 箭头函数 箭头函数的语法更加简洁明了，使用箭头（=>）来定义函数，并且省略了 function 关键字和大括号 {}，如果只有一个参数可以省略小括号 ()。 箭头函数没有自己的 this，它会捕获其所在上下文的 this 值，因此在箭头函数内部无法通过 this 来访问外部作用域的 this。 箭头函数‌：不能用作构造函数，因为...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%9F%A5%E8%AF%86%E5%BA%93/JS/3%E3%80%81%E6%99%AE%E9%80%9A%E5%87%BD%E6%95%B0%E4%B8%8E%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E5%8C%BA%E5%88%AB.html"}],["meta",{"property":"og:site_name","content":"向前有光的博客"}],["meta",{"property":"og:title","content":"普通函数与箭头函数区别"}],["meta",{"property":"og:description","content":"普通函数与箭头函数区别 箭头函数 箭头函数的语法更加简洁明了，使用箭头（=>）来定义函数，并且省略了 function 关键字和大括号 {}，如果只有一个参数可以省略小括号 ()。 箭头函数没有自己的 this，它会捕获其所在上下文的 this 值，因此在箭头函数内部无法通过 this 来访问外部作用域的 this。 箭头函数‌：不能用作构造函数，因为..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-03T07:46:09.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:modified_time","content":"2025-03-03T07:46:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"普通函数与箭头函数区别\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-03T07:46:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"箭头函数","slug":"箭头函数","link":"#箭头函数","children":[]},{"level":2,"title":"普通函数","slug":"普通函数","link":"#普通函数","children":[]}],"git":{"createdTime":1740987969000,"updatedTime":1740987969000,"contributors":[{"name":"jitems","email":"3119125794@qq.com","commits":1}]},"readingTime":{"minutes":0.86,"words":258},"filePathRelative":"知识库/JS/3、普通函数与箭头函数区别.md","localizedDate":"2025年3月3日","excerpt":"\\n<h2>箭头函数</h2>\\n<ul>\\n<li>箭头函数的语法更加简洁明了，使用箭头<code>（=&gt;）</code>来定义函数，并且省略了 <code>function</code> 关键字和大括号 <code>{}</code>，如果只有一个参数可以省略小括号 <code>()</code>。</li>\\n<li>箭头函数没有自己的 <code>this</code>，它会捕获其所在上下文的 <code>this</code> 值，因此在箭头函数内部无法通过 <code>this</code> 来访问外部作用域的 <code>this</code>。</li>\\n<li>箭头函数‌：不能用作构造函数，因为它们没有自己的<code>this</code>和<code>prototype</code>属性</li>\\n</ul>","autoDesc":true}');export{p as comp,m as data};
