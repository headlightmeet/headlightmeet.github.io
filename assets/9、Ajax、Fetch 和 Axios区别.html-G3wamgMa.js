import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as a,d as o}from"./app-CBrd23JN.js";const i={},c=o('<h1 id="ajax、fetch-和-axios区别" tabindex="-1"><a class="header-anchor" href="#ajax、fetch-和-axios区别"><span>Ajax、Fetch 和 Axios区别</span></a></h1><h2 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax"><span>Ajax</span></a></h2><p>基于XHR原生开发，目前已有的<code>fetch</code>可替代。本身针对mvc编程模式，不太适合目前mwm编程模式。JQ本身较大，如单纯使用ajax可自己封装1个，不然会影响性能体验</p><h2 id="axios" tabindex="-1"><a class="header-anchor" href="#axios"><span>Axios</span></a></h2><p>axios也是对原生XHR的1种封装，不过是<code>Promise</code>实现版本。，符合最新ES规范</p><h2 id="fetch-怀起" tabindex="-1"><a class="header-anchor" href="#fetch-怀起"><span>fetch(怀起)</span></a></h2><p>window自带<code>window.fetch</code>方法，在最新版Firefox和Chrome中已提供支持，其他浏览器还有兼容性不是很好的，要做兼容性处理。fetch是1个基于promise设计的low-levelAPl，不是ajax进一步封装的</p>',7),r=[c];function s(h,n){return a(),t("div",null,r)}const d=e(i,[["render",s],["__file","9、Ajax、Fetch 和 Axios区别.html.vue"]]),m=JSON.parse('{"path":"/%E7%9F%A5%E8%AF%86%E5%BA%93/JS/9%E3%80%81Ajax%E3%80%81Fetch%20%E5%92%8C%20Axios%E5%8C%BA%E5%88%AB.html","title":"Ajax、Fetch 和 Axios区别","lang":"zh-CN","frontmatter":{"title":"Ajax、Fetch 和 Axios区别","order":9,"description":"Ajax、Fetch 和 Axios区别 Ajax 基于XHR原生开发，目前已有的fetch可替代。本身针对mvc编程模式，不太适合目前mwm编程模式。JQ本身较大，如单纯使用ajax可自己封装1个，不然会影响性能体验 Axios axios也是对原生XHR的1种封装，不过是Promise实现版本。，符合最新ES规范 fetch(怀起) window自...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%9F%A5%E8%AF%86%E5%BA%93/JS/9%E3%80%81Ajax%E3%80%81Fetch%20%E5%92%8C%20Axios%E5%8C%BA%E5%88%AB.html"}],["meta",{"property":"og:site_name","content":"向前有光的博客"}],["meta",{"property":"og:title","content":"Ajax、Fetch 和 Axios区别"}],["meta",{"property":"og:description","content":"Ajax、Fetch 和 Axios区别 Ajax 基于XHR原生开发，目前已有的fetch可替代。本身针对mvc编程模式，不太适合目前mwm编程模式。JQ本身较大，如单纯使用ajax可自己封装1个，不然会影响性能体验 Axios axios也是对原生XHR的1种封装，不过是Promise实现版本。，符合最新ES规范 fetch(怀起) window自..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-03T07:46:09.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:modified_time","content":"2025-03-03T07:46:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Ajax、Fetch 和 Axios区别\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-03T07:46:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Ajax","slug":"ajax","link":"#ajax","children":[]},{"level":2,"title":"Axios","slug":"axios","link":"#axios","children":[]},{"level":2,"title":"fetch(怀起)","slug":"fetch-怀起","link":"#fetch-怀起","children":[]}],"git":{"createdTime":1740987969000,"updatedTime":1740987969000,"contributors":[{"name":"jitems","email":"3119125794@qq.com","commits":1}]},"readingTime":{"minutes":0.57,"words":172},"filePathRelative":"知识库/JS/9、Ajax、Fetch 和 Axios区别.md","localizedDate":"2025年3月3日","excerpt":"\\n<h2>Ajax</h2>\\n<p>基于XHR原生开发，目前已有的<code>fetch</code>可替代。本身针对mvc编程模式，不太适合目前mwm编程模式。JQ本身较大，如单纯使用ajax可自己封装1个，不然会影响性能体验</p>\\n<h2>Axios</h2>\\n<p>axios也是对原生XHR的1种封装，不过是<code>Promise</code>实现版本。，符合最新ES规范</p>\\n<h2>fetch(怀起)</h2>\\n<p>window自带<code>window.fetch</code>方法，在最新版Firefox和Chrome中已提供支持，其他浏览器还有兼容性不是很好的，要做兼容性处理。fetch是1个基于promise设计的low-levelAPl，不是ajax进一步封装的</p>","autoDesc":true}');export{d as comp,m as data};
